// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  username  String   @unique
  email     String   @unique
  password  String
  money     Int?     @default(500)

  sentTransfers     RecentFundsTransfer[] @relation("SentTransfers")
  receivedTransfers RecentFundsTransfer[] @relation("ReceivedTransfers")
}

model RecentFundsTransfer {
  id        Int      @id @default(autoincrement())
  amount    Int
  message   String?
  createdAt DateTime @default(now())

  sender   User @relation("SentTransfers", fields: [senderId], references: [id])
  senderId Int

  receiver   User @relation("ReceivedTransfers", fields: [receiverId], references: [id])
  receiverId Int
}

// sentTransfers     RecentFundsTransfer[] @relation("SentTransfers")
// receivedTransfers RecentFundsTransfer[] @relation("ReceivedTransfers")

// Si User A est specifier dans sender,
// alors la data sera relier a sentTransfers,
// et si User B est specifier dans receiver,
// alors la data sera relier a receivedTransfers.
